on:
  push:
    tags:
      - '**'
    branches:
      - 'feature/deploy'
  workflow_dispatch:

name: 'Build and deploy'

jobs:
  build:
    name: 'Build and deploy'
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: actions/checkout@v2

      - name: Setup npm cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-
      - name: Install dependencies
        run: npm ci
      - name: Build bot
        run: |
          npm run build
          cp settings.json.example settings.json
          sed -i 's/DISCORD_TOKEN/${{ secrets.DISCORD_TOKEN }}/g' settings.json
          sed -i 's/OPEN_DATA_TOKEN/${{ secrets.OPEN_DATE_TOKEN }}/g' settings.json
      - name: Cleanup
        run: |
          npm run build
          find . -maxdepth 1 -name ".*" -not -name "." -exec rm -rf {} \;
          rm -rf src tests settings.json.example tsconfig.json readme.md babel.config.js
      - name: deploy
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -avzr --delete
          remote_path: ${{ secrets.DEPLOY_PATH }}
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}
